/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.Simulator;
import javax.swing.JOptionPane;

/**
 *
 * @author edrei
 */
public class MainView extends javax.swing.JFrame {

    /**
     * Creates new form MainMenu
     */
    public MainView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnCargarJSON = new javax.swing.JButton();
        btnNuevaSimulacion = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Simulador de Memoria Dinamica");

        btnCargarJSON.setText("Cargar Simulación");

        btnNuevaSimulacion.setText("Nueva Simulación");
        btnNuevaSimulacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaSimulacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnNuevaSimulacion)
                            .addComponent(btnCargarJSON))
                        .addGap(72, 72, 72))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(33, 33, 33))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(btnNuevaSimulacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCargarJSON)
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevaSimulacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaSimulacionActionPerformed
        // TODO add your handling code here:
        Simulator sim = new Simulator(PopUpTamañoMemoria());
        boolean tamañoSOValido = false;
        while (!tamañoSOValido) {
            int tamañoSO = PopUpTamañoSO();
            if (sim.memory.sizeInKilobytes > tamañoSO) {
                sim.addSO(tamañoSO);
                tamañoSOValido = true;
            } else {
                JOptionPane.showMessageDialog(null, "El tamaño del sistema operativo es mayor al de la memoria, por favor ingrese un tamaño menor.", "Memoria Insuficiente", JOptionPane.WARNING_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_btnNuevaSimulacionActionPerformed

    private int PopUpTamañoMemoria() {

        int tamañoMemoria = 0;
        boolean numeroValido = false;

        while (!numeroValido) {
            String input = JOptionPane.showInputDialog(null, "Ingrese el tamaño de la memoria en KB:", "Tamaño de la memoria", JOptionPane.QUESTION_MESSAGE);
            try {
                tamañoMemoria = Integer.parseInt(input);
                System.out.println("Tamaño de la memoria ingresado: " + tamañoMemoria);
                numeroValido = true;
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Por favor, ingrese un número válido para el tamaño de la memoria.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        return tamañoMemoria;
    }

    private int PopUpTamañoSO() {
        int tamañoSO = 0;
        boolean numeroValido = false;

        while (!numeroValido) {
            String input = JOptionPane.showInputDialog(null, "Ingrese el tamaño del sistema operativo en KB:", "Tamaño del SO", JOptionPane.QUESTION_MESSAGE);
            try {
                tamañoSO = Integer.parseInt(input);
                System.out.println("Tamaño del sistema operativo: " + tamañoSO);
                numeroValido = true;
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Por favor, ingrese un número válido para el tamaño del sistema operativo.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        return tamañoSO;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCargarJSON;
    private javax.swing.JButton btnNuevaSimulacion;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
